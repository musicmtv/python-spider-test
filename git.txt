git config --global user.name "james zhu"
git config --global user.email "james07@139.com"
git config user.name
#初始化git
git init
#查看状态
git status
#添加文件
git add 1.py
#添加所有文件
git add .
#提交改变commit
git commit -m "create 1.py"
#查看修改log
git log
#查看内容细节不同
git diff
git diff --cached
#回到从前reset
git add 2.py
#撤销提交2.py
git commit --amend --no-edit
#把1.py提交修改
git add 1.py
#把1.py撤销staged到unmodified
git reset 1.py
#查看哪几个文件被修改
git log --oneline
#回到上一个
git reset --hard HEAD
#回到上上一个
git reset --hard HEAD^
#回到上上上一个
git reset --hard HEAD^^
#回到上上上一个
git reset --hard HEAD~3
#回到上一个另一种表示"commit id"
git reset --hard c6762a1
#查看记录之前操作的"commit id" 查看未来
git reflog
#回到某一个单个文件的过去
git checkout c6762a1 -- 1.py
#查看分支
git log --oneline --graph
#创建分支
git branch dev
#回到某个分支
git checkout dev
#切换到master
git checkout master
#删除dev分支
git branch -d dev
#回到dev分支
git checkout -b dev
#查看分支
git branch
#添加提交同时进行,新文件这样做无效
git commit -am "change 3"
#把分支代码推到master上面，先要在master上面
git branch#查看现在是否在master上面
git merge --no-ff -m "keep merge info" dev
git remote add origin https://github.com/musicmtv/python-spider-test.git
git push -u origin master
#先删除远程 Git 仓库
git remote rm origin
#如果执行 git remote rm origin 报错的话，我们可以手动修改gitconfig文件的内容
vi .git/config